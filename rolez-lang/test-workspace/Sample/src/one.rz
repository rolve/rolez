package foo

class Person {
	val name: pure String
	val surname: pure String
	var address: readonly Address
	
	new(val name: pure String, val surname: pure String, val address: readonly Address) {
		this.name = name;
		this.surname = surname;
		this.address = address;
		val a: pure Object = new Array[readwrite Address]("Hi".length());
		new Array[readwrite Address]("Hi".length()) as pure Object;
	}
	
	def readonly fullName: readonly String {
		val n: pure Person = null;
		return "Hi";
	}
	
	def readwrite setAddress(val address: readwrite Address): {
		this.address = address;
	}
	
	def readonly bar(val k: int): {		
		var i: int = -555555555;
		val j: pure String = "Hi";
		
		
		this.address = null;
		new Account;
		
		val s: readonly String = "Hi" + 'c' + null + 5 + null + this.surname.length();
		
		while(i < j.length())
			if((false && !true) || 5 < 0 + 7)
				i = 2*i + 2;
			else
				i = k;
	}
}


class Student extends Person {
	val university: pure String
	
	new {
		super("John", "Doe", null);
		this.university = "ETH";
	}
	
	def pure bla: {
		this.name;
		this.setAddress(new Address);
	}
}

class Account {
	var owner: readonly Person
	var description: readonly String
}

class Address {
	var street: pure String
	var number: pure String
	var city: pure String
	var zipCode: pure String
	
	def readonly foo(val a: readonly Account, val b: readonly Account): {
		this.city;
		this.foo(a, new Account);
		
		val p: readwrite Person = new Person("Jim", "Dee", this);
		p.name;
		p.fullName() + p.setAddress(null);
	}
}

task Main: {
	var o: pure Object = "Hello";
	var a: readonly Address = new Address;
	a.city;
}

class Test {
	def pure foo: char {
		val array: readwrite Array[char] = new Array[char](5);
		array.set(0, 'H');
		array.set(1, 'e');
		array.set(2, 'l');
		array.set(3, 'l');
		array.set(4, 'o');
		
		val s: pure String = new Account.toString().trim() + new String(array);
		return s.charAt(s.hashCode() - 1);
	}
}