/*
 * generated by Xtext
 */
grammar InternalRolez;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package ch.trick17.rolez.lang.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ch.trick17.rolez.lang.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import ch.trick17.rolez.lang.services.RolezGrammarAccess;

}

@parser::members {
 
 	private RolezGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RolezGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildCard
entryRuleQualifiedNameWithWildCard 
:
{ before(grammarAccess.getQualifiedNameWithWildCardRule()); }
	 ruleQualifiedNameWithWildCard
{ after(grammarAccess.getQualifiedNameWithWildCardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildCard
ruleQualifiedNameWithWildCard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
(rule__QualifiedNameWithWildCard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassLike
entryRuleClassLike 
:
{ before(grammarAccess.getClassLikeRule()); }
	 ruleClassLike
{ after(grammarAccess.getClassLikeRule()); } 
	 EOF 
;

// Rule ClassLike
ruleClassLike
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassLikeAccess().getAlternatives()); }
(rule__ClassLike__Alternatives)
{ after(grammarAccess.getClassLikeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getAlternatives()); }
(rule__Class__Alternatives)
{ after(grammarAccess.getClassAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNormalClass
entryRuleNormalClass 
:
{ before(grammarAccess.getNormalClassRule()); }
	 ruleNormalClass
{ after(grammarAccess.getNormalClassRule()); } 
	 EOF 
;

// Rule NormalClass
ruleNormalClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNormalClassAccess().getGroup()); }
(rule__NormalClass__Group__0)
{ after(grammarAccess.getNormalClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingletonClass
entryRuleSingletonClass 
:
{ before(grammarAccess.getSingletonClassRule()); }
	 ruleSingletonClass
{ after(grammarAccess.getSingletonClassRule()); } 
	 EOF 
;

// Rule SingletonClass
ruleSingletonClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingletonClassAccess().getGroup()); }
(rule__SingletonClass__Group__0)
{ after(grammarAccess.getSingletonClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask 
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskAccess().getGroup()); }
(rule__Task__Group__0)
{ after(grammarAccess.getTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeParam
entryRuleTypeParam 
:
{ before(grammarAccess.getTypeParamRule()); }
	 ruleTypeParam
{ after(grammarAccess.getTypeParamRule()); } 
	 EOF 
;

// Rule TypeParam
ruleTypeParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParamAccess().getNameAssignment()); }
(rule__TypeParam__NameAssignment)
{ after(grammarAccess.getTypeParamAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMember
entryRuleMember 
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccess().getAlternatives()); }
(rule__Member__Alternatives)
{ after(grammarAccess.getMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstr
entryRuleConstr 
:
{ before(grammarAccess.getConstrRule()); }
	 ruleConstr
{ after(grammarAccess.getConstrRule()); } 
	 EOF 
;

// Rule Constr
ruleConstr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstrAccess().getGroup()); }
(rule__Constr__Group__0)
{ after(grammarAccess.getConstrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParam
entryRuleParam 
:
{ before(grammarAccess.getParamRule()); }
	 ruleParam
{ after(grammarAccess.getParamRule()); } 
	 EOF 
;

// Rule Param
ruleParam
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAccess().getGroup()); }
(rule__Param__Group__0)
{ after(grammarAccess.getParamAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStmt
entryRuleStmt 
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStmtAccess().getAlternatives()); }
(rule__Stmt__Alternatives)
{ after(grammarAccess.getStmtAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVarDecl
entryRuleLocalVarDecl 
:
{ before(grammarAccess.getLocalVarDeclRule()); }
	 ruleLocalVarDecl
{ after(grammarAccess.getLocalVarDeclRule()); } 
	 EOF 
;

// Rule LocalVarDecl
ruleLocalVarDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVarDeclAccess().getGroup()); }
(rule__LocalVarDecl__Group__0)
{ after(grammarAccess.getLocalVarDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVar
entryRuleLocalVar 
:
{ before(grammarAccess.getLocalVarRule()); }
	 ruleLocalVar
{ after(grammarAccess.getLocalVarRule()); } 
	 EOF 
;

// Rule LocalVar
ruleLocalVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVarAccess().getGroup()); }
(rule__LocalVar__Group__0)
{ after(grammarAccess.getLocalVarAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStmt
entryRuleIfStmt 
:
{ before(grammarAccess.getIfStmtRule()); }
	 ruleIfStmt
{ after(grammarAccess.getIfStmtRule()); } 
	 EOF 
;

// Rule IfStmt
ruleIfStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStmtAccess().getGroup()); }
(rule__IfStmt__Group__0)
{ after(grammarAccess.getIfStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileLoop
entryRuleWhileLoop 
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
(rule__WhileLoop__Group__0)
{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuperConstrCall
entryRuleSuperConstrCall 
:
{ before(grammarAccess.getSuperConstrCallRule()); }
	 ruleSuperConstrCall
{ after(grammarAccess.getSuperConstrCallRule()); } 
	 EOF 
;

// Rule SuperConstrCall
ruleSuperConstrCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuperConstrCallAccess().getGroup()); }
(rule__SuperConstrCall__Group__0)
{ after(grammarAccess.getSuperConstrCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturn
entryRuleReturn 
:
{ before(grammarAccess.getReturnRule()); }
	 ruleReturn
{ after(grammarAccess.getReturnRule()); } 
	 EOF 
;

// Rule Return
ruleReturn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnAccess().getAlternatives()); }
(rule__Return__Alternatives)
{ after(grammarAccess.getReturnAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnNothing
entryRuleReturnNothing 
:
{ before(grammarAccess.getReturnNothingRule()); }
	 ruleReturnNothing
{ after(grammarAccess.getReturnNothingRule()); } 
	 EOF 
;

// Rule ReturnNothing
ruleReturnNothing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnNothingAccess().getGroup()); }
(rule__ReturnNothing__Group__0)
{ after(grammarAccess.getReturnNothingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnExpr
entryRuleReturnExpr 
:
{ before(grammarAccess.getReturnExprRule()); }
	 ruleReturnExpr
{ after(grammarAccess.getReturnExprRule()); } 
	 EOF 
;

// Rule ReturnExpr
ruleReturnExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnExprAccess().getGroup()); }
(rule__ReturnExpr__Group__0)
{ after(grammarAccess.getReturnExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExprStmt
entryRuleExprStmt 
:
{ before(grammarAccess.getExprStmtRule()); }
	 ruleExprStmt
{ after(grammarAccess.getExprStmtRule()); } 
	 EOF 
;

// Rule ExprStmt
ruleExprStmt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprStmtAccess().getGroup()); }
(rule__ExprStmt__Group__0)
{ after(grammarAccess.getExprStmtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpr
entryRuleExpr 
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExprAccess().getAssignmentParserRuleCall()); }
	ruleAssignment
{ after(grammarAccess.getExprAccess().getAssignmentParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpr
entryRuleOrExpr 
:
{ before(grammarAccess.getOrExprRule()); }
	 ruleOrExpr
{ after(grammarAccess.getOrExprRule()); } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExprAccess().getGroup()); }
(rule__OrExpr__Group__0)
{ after(grammarAccess.getOrExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpr
entryRuleAndExpr 
:
{ before(grammarAccess.getAndExprRule()); }
	 ruleAndExpr
{ after(grammarAccess.getAndExprRule()); } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExprAccess().getGroup()); }
(rule__AndExpr__Group__0)
{ after(grammarAccess.getAndExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpr
entryRuleEqualityExpr 
:
{ before(grammarAccess.getEqualityExprRule()); }
	 ruleEqualityExpr
{ after(grammarAccess.getEqualityExprRule()); } 
	 EOF 
;

// Rule EqualityExpr
ruleEqualityExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup()); }
(rule__EqualityExpr__Group__0)
{ after(grammarAccess.getEqualityExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpr
entryRuleRelationalExpr 
:
{ before(grammarAccess.getRelationalExprRule()); }
	 ruleRelationalExpr
{ after(grammarAccess.getRelationalExprRule()); } 
	 EOF 
;

// Rule RelationalExpr
ruleRelationalExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup()); }
(rule__RelationalExpr__Group__0)
{ after(grammarAccess.getRelationalExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpr
entryRuleAdditiveExpr 
:
{ before(grammarAccess.getAdditiveExprRule()); }
	 ruleAdditiveExpr
{ after(grammarAccess.getAdditiveExprRule()); } 
	 EOF 
;

// Rule AdditiveExpr
ruleAdditiveExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup()); }
(rule__AdditiveExpr__Group__0)
{ after(grammarAccess.getAdditiveExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpr
entryRuleMultiplicativeExpr 
:
{ before(grammarAccess.getMultiplicativeExprRule()); }
	 ruleMultiplicativeExpr
{ after(grammarAccess.getMultiplicativeExprRule()); } 
	 EOF 
;

// Rule MultiplicativeExpr
ruleMultiplicativeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
(rule__MultiplicativeExpr__Group__0)
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCast
entryRuleCast 
:
{ before(grammarAccess.getCastRule()); }
	 ruleCast
{ after(grammarAccess.getCastRule()); } 
	 EOF 
;

// Rule Cast
ruleCast
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastAccess().getGroup()); }
(rule__Cast__Group__0)
{ after(grammarAccess.getCastAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryMinus
entryRuleUnaryMinus 
:
{ before(grammarAccess.getUnaryMinusRule()); }
	 ruleUnaryMinus
{ after(grammarAccess.getUnaryMinusRule()); } 
	 EOF 
;

// Rule UnaryMinus
ruleUnaryMinus
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryMinusAccess().getAlternatives()); }
(rule__UnaryMinus__Alternatives)
{ after(grammarAccess.getUnaryMinusAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryNot
entryRuleUnaryNot 
:
{ before(grammarAccess.getUnaryNotRule()); }
	 ruleUnaryNot
{ after(grammarAccess.getUnaryNotRule()); } 
	 EOF 
;

// Rule UnaryNot
ruleUnaryNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryNotAccess().getAlternatives()); }
(rule__UnaryNot__Alternatives)
{ after(grammarAccess.getUnaryNotAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMemberAccess
entryRuleMemberAccess 
:
{ before(grammarAccess.getMemberAccessRule()); }
	 ruleMemberAccess
{ after(grammarAccess.getMemberAccessRule()); } 
	 EOF 
;

// Rule MemberAccess
ruleMemberAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMemberAccessAccess().getGroup()); }
(rule__MemberAccess__Group__0)
{ after(grammarAccess.getMemberAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleExpr
entryRuleSimpleExpr 
:
{ before(grammarAccess.getSimpleExprRule()); }
	 ruleSimpleExpr
{ after(grammarAccess.getSimpleExprRule()); } 
	 EOF 
;

// Rule SimpleExpr
ruleSimpleExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleExprAccess().getAlternatives()); }
(rule__SimpleExpr__Alternatives)
{ after(grammarAccess.getSimpleExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarRef
entryRuleVarRef 
:
{ before(grammarAccess.getVarRefRule()); }
	 ruleVarRef
{ after(grammarAccess.getVarRefRule()); } 
	 EOF 
;

// Rule VarRef
ruleVarRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarRefAccess().getVariableAssignment()); }
(rule__VarRef__VariableAssignment)
{ after(grammarAccess.getVarRefAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgsOnly
entryRuleArgsOnly 
:
{ before(grammarAccess.getArgsOnlyRule()); }
	 ruleArgsOnly
{ after(grammarAccess.getArgsOnlyRule()); } 
	 EOF 
;

// Rule ArgsOnly
ruleArgsOnly
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgsOnlyAccess().getArgsAssignment()); }
(rule__ArgsOnly__ArgsAssignment)
{ after(grammarAccess.getArgsOnlyAccess().getArgsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNew
entryRuleNew 
:
{ before(grammarAccess.getNewRule()); }
	 ruleNew
{ after(grammarAccess.getNewRule()); } 
	 EOF 
;

// Rule New
ruleNew
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewAccess().getGroup()); }
(rule__New__Group__0)
{ after(grammarAccess.getNewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThe
entryRuleThe 
:
{ before(grammarAccess.getTheRule()); }
	 ruleThe
{ after(grammarAccess.getTheRule()); } 
	 EOF 
;

// Rule The
ruleThe
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTheAccess().getGroup()); }
(rule__The__Group__0)
{ after(grammarAccess.getTheAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStart
entryRuleStart 
:
{ before(grammarAccess.getStartRule()); }
	 ruleStart
{ after(grammarAccess.getStartRule()); } 
	 EOF 
;

// Rule Start
ruleStart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartAccess().getGroup()); }
(rule__Start__Group__0)
{ after(grammarAccess.getStartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesized
entryRuleParenthesized 
:
{ before(grammarAccess.getParenthesizedRule()); }
	 ruleParenthesized
{ after(grammarAccess.getParenthesizedRule()); } 
	 EOF 
;

// Rule Parenthesized
ruleParenthesized
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedAccess().getGroup()); }
(rule__Parenthesized__Group__0)
{ after(grammarAccess.getParenthesizedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLiteral
entryRuleIntLiteral 
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
(rule__IntLiteral__ValueAssignment)
{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral 
:
{ before(grammarAccess.getDoubleLiteralRule()); }
	 ruleDoubleLiteral
{ after(grammarAccess.getDoubleLiteralRule()); } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleLiteralAccess().getValueAssignment()); }
(rule__DoubleLiteral__ValueAssignment)
{ after(grammarAccess.getDoubleLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCharLiteral
entryRuleCharLiteral 
:
{ before(grammarAccess.getCharLiteralRule()); }
	 ruleCharLiteral
{ after(grammarAccess.getCharLiteralRule()); } 
	 EOF 
;

// Rule CharLiteral
ruleCharLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharLiteralAccess().getValueAssignment()); }
(rule__CharLiteral__ValueAssignment)
{ after(grammarAccess.getCharLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBool
entryRuleBool 
:
{ before(grammarAccess.getBoolRule()); }
	 ruleBool
{ after(grammarAccess.getBoolRule()); } 
	 EOF 
;

// Rule Bool
ruleBool
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolAccess().getAlternatives()); }
(rule__Bool__Alternatives)
{ after(grammarAccess.getBoolAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReferenceType
entryRuleReferenceType 
:
{ before(grammarAccess.getReferenceTypeRule()); }
	 ruleReferenceType
{ after(grammarAccess.getReferenceTypeRule()); } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceTypeAccess().getAlternatives()); }
(rule__ReferenceType__Alternatives)
{ after(grammarAccess.getReferenceTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveType
entryRulePrimitiveType 
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
(rule__PrimitiveType__Alternatives)
{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeParamRef
entryRuleTypeParamRef 
:
{ before(grammarAccess.getTypeParamRefRule()); }
	 ruleTypeParamRef
{ after(grammarAccess.getTypeParamRefRule()); } 
	 EOF 
;

// Rule TypeParamRef
ruleTypeParamRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeParamRefAccess().getParamAssignment()); }
(rule__TypeParamRef__ParamAssignment)
{ after(grammarAccess.getTypeParamRefAccess().getParamAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRoleType
entryRuleRoleType 
:
{ before(grammarAccess.getRoleTypeRule()); }
	 ruleRoleType
{ after(grammarAccess.getRoleTypeRule()); } 
	 EOF 
;

// Rule RoleType
ruleRoleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleTypeAccess().getGroup()); }
(rule__RoleType__Group__0)
{ after(grammarAccess.getRoleTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassRef
entryRuleClassRef 
:
{ before(grammarAccess.getClassRefRule()); }
	 ruleClassRef
{ after(grammarAccess.getClassRefRule()); } 
	 EOF 
;

// Rule ClassRef
ruleClassRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassRefAccess().getAlternatives()); }
(rule__ClassRef__Alternatives)
{ after(grammarAccess.getClassRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleClassRef
entryRuleSimpleClassRef 
:
{ before(grammarAccess.getSimpleClassRefRule()); }
	 ruleSimpleClassRef
{ after(grammarAccess.getSimpleClassRefRule()); } 
	 EOF 
;

// Rule SimpleClassRef
ruleSimpleClassRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleClassRefAccess().getClazzAssignment()); }
(rule__SimpleClassRef__ClazzAssignment)
{ after(grammarAccess.getSimpleClassRefAccess().getClazzAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGenericClassRef
entryRuleGenericClassRef 
:
{ before(grammarAccess.getGenericClassRefRule()); }
	 ruleGenericClassRef
{ after(grammarAccess.getGenericClassRefRule()); } 
	 EOF 
;

// Rule GenericClassRef
ruleGenericClassRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGenericClassRefAccess().getGroup()); }
(rule__GenericClassRef__Group__0)
{ after(grammarAccess.getGenericClassRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewClassRef
entryRuleNewClassRef 
:
{ before(grammarAccess.getNewClassRefRule()); }
	 ruleNewClassRef
{ after(grammarAccess.getNewClassRefRule()); } 
	 EOF 
;

// Rule NewClassRef
ruleNewClassRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewClassRefAccess().getAlternatives()); }
(rule__NewClassRef__Alternatives)
{ after(grammarAccess.getNewClassRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTheClassRef
entryRuleTheClassRef 
:
{ before(grammarAccess.getTheClassRefRule()); }
	 ruleTheClassRef
{ after(grammarAccess.getTheClassRefRule()); } 
	 EOF 
;

// Rule TheClassRef
ruleTheClassRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTheClassRefAccess().getAlternatives()); }
(rule__TheClassRef__Alternatives)
{ after(grammarAccess.getTheClassRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskRef
entryRuleTaskRef 
:
{ before(grammarAccess.getTaskRefRule()); }
	 ruleTaskRef
{ after(grammarAccess.getTaskRefRule()); } 
	 EOF 
;

// Rule TaskRef
ruleTaskRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskRefAccess().getAlternatives()); }
(rule__TaskRef__Alternatives)
{ after(grammarAccess.getTaskRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr 
:
{ before(grammarAccess.getUnaryExprRule()); }
	 ruleUnaryExpr
{ after(grammarAccess.getUnaryExprRule()); } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExprAccess().getAlternatives()); }
(rule__UnaryExpr__Alternatives)
{ after(grammarAccess.getUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryExpr
entryRuleBinaryExpr 
:
{ before(grammarAccess.getBinaryExprRule()); }
	 ruleBinaryExpr
{ after(grammarAccess.getBinaryExprRule()); } 
	 EOF 
;

// Rule BinaryExpr
ruleBinaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryExprAccess().getAlternatives()); }
(rule__BinaryExpr__Alternatives)
{ after(grammarAccess.getBinaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}









// Entry rule entryRuleTyped
entryRuleTyped 
:
{ before(grammarAccess.getTypedRule()); }
	 ruleTyped
{ after(grammarAccess.getTypedRule()); } 
	 EOF 
;

// Rule Typed
ruleTyped
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedAccess().getAlternatives()); }
(rule__Typed__Alternatives)
{ after(grammarAccess.getTypedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypedBody
entryRuleTypedBody 
:
{ before(grammarAccess.getTypedBodyRule()); }
	 ruleTypedBody
{ after(grammarAccess.getTypedBodyRule()); } 
	 EOF 
;

// Rule TypedBody
ruleTypedBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedBodyAccess().getAlternatives()); }
(rule__TypedBody__Alternatives)
{ after(grammarAccess.getTypedBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule VarKind
ruleVarKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarKindAccess().getAlternatives()); }
(rule__VarKind__Alternatives)
{ after(grammarAccess.getVarKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Val
ruleVal
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValAccess().getVALEnumLiteralDeclaration()); }
(	'val' 
)
{ after(grammarAccess.getValAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpOr
ruleOpOr
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpOrAccess().getOREnumLiteralDeclaration()); }
(	'||' 
)
{ after(grammarAccess.getOpOrAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpAnd
ruleOpAnd
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAndAccess().getANDEnumLiteralDeclaration()); }
(	'&&' 
)
{ after(grammarAccess.getOpAndAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpEquality
ruleOpEquality
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getAlternatives()); }
(rule__OpEquality__Alternatives)
{ after(grammarAccess.getOpEqualityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpRelational
ruleOpRelational
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpRelationalAccess().getAlternatives()); }
(rule__OpRelational__Alternatives)
{ after(grammarAccess.getOpRelationalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpAdditive
ruleOpAdditive
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getAlternatives()); }
(rule__OpAdditive__Alternatives)
{ after(grammarAccess.getOpAdditiveAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OpMultiplicative
ruleOpMultiplicative
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getAlternatives()); }
(rule__OpMultiplicative__Alternatives)
{ after(grammarAccess.getOpMultiplicativeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getAlternatives()); }
(rule__Role__Alternatives)
{ after(grammarAccess.getRoleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ClassLike__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassLikeAccess().getClassParserRuleCall_0()); }
	ruleClass
{ after(grammarAccess.getClassLikeAccess().getClassParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassLikeAccess().getTaskParserRuleCall_1()); }
	ruleTask
{ after(grammarAccess.getClassLikeAccess().getTaskParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNormalClassParserRuleCall_0()); }
	ruleNormalClass
{ after(grammarAccess.getClassAccess().getNormalClassParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassAccess().getSingletonClassParserRuleCall_1()); }
	ruleSingletonClass
{ after(grammarAccess.getClassAccess().getSingletonClassParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Alternatives_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getConstrsAssignment_5_1_0()); }
(rule__NormalClass__ConstrsAssignment_5_1_0)
{ after(grammarAccess.getNormalClassAccess().getConstrsAssignment_5_1_0()); }
)

    |(
{ before(grammarAccess.getNormalClassAccess().getMembersAssignment_5_1_1()); }
(rule__NormalClass__MembersAssignment_5_1_1)
{ after(grammarAccess.getNormalClassAccess().getMembersAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
	ruleField
{ after(grammarAccess.getMemberAccess().getFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
	ruleMethod
{ after(grammarAccess.getMemberAccess().getMethodParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getOverridingAssignment_1_0()); }
(rule__Method__OverridingAssignment_1_0)
{ after(grammarAccess.getMethodAccess().getOverridingAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getMethodAccess().getDefKeyword_1_1()); }

	'def' 

{ after(grammarAccess.getMethodAccess().getDefKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStmtAccess().getBlockParserRuleCall_0()); }
	ruleBlock
{ after(grammarAccess.getStmtAccess().getBlockParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getLocalVarDeclParserRuleCall_1()); }
	ruleLocalVarDecl
{ after(grammarAccess.getStmtAccess().getLocalVarDeclParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_2()); }
	ruleIfStmt
{ after(grammarAccess.getStmtAccess().getIfStmtParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getWhileLoopParserRuleCall_3()); }
	ruleWhileLoop
{ after(grammarAccess.getStmtAccess().getWhileLoopParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getSuperConstrCallParserRuleCall_4()); }
	ruleSuperConstrCall
{ after(grammarAccess.getStmtAccess().getSuperConstrCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getReturnParserRuleCall_5()); }
	ruleReturn
{ after(grammarAccess.getStmtAccess().getReturnParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStmtAccess().getExprStmtParserRuleCall_6()); }
	ruleExprStmt
{ after(grammarAccess.getStmtAccess().getExprStmtParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Return__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnAccess().getReturnNothingParserRuleCall_0()); }
	ruleReturnNothing
{ after(grammarAccess.getReturnAccess().getReturnNothingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReturnAccess().getReturnExprParserRuleCall_1()); }
	ruleReturnExpr
{ after(grammarAccess.getReturnAccess().getReturnExprParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinus__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMinusAccess().getUnaryNotParserRuleCall_0()); }
	ruleUnaryNot
{ after(grammarAccess.getUnaryMinusAccess().getUnaryNotParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryMinusAccess().getGroup_1()); }
(rule__UnaryMinus__Group_1__0)
{ after(grammarAccess.getUnaryMinusAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryNot__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryNotAccess().getMemberAccessParserRuleCall_0()); }
	ruleMemberAccess
{ after(grammarAccess.getUnaryNotAccess().getMemberAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryNotAccess().getGroup_1()); }
(rule__UnaryNot__Group_1__0)
{ after(grammarAccess.getUnaryNotAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExprAccess().getGroup_0()); }
(rule__SimpleExpr__Group_0__0)
{ after(grammarAccess.getSimpleExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSimpleExprAccess().getVarRefParserRuleCall_1()); }
	ruleVarRef
{ after(grammarAccess.getSimpleExprAccess().getVarRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSimpleExprAccess().getNewParserRuleCall_2()); }
	ruleNew
{ after(grammarAccess.getSimpleExprAccess().getNewParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSimpleExprAccess().getTheParserRuleCall_3()); }
	ruleThe
{ after(grammarAccess.getSimpleExprAccess().getTheParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSimpleExprAccess().getStartParserRuleCall_4()); }
	ruleStart
{ after(grammarAccess.getSimpleExprAccess().getStartParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getSimpleExprAccess().getParenthesizedParserRuleCall_5()); }
	ruleParenthesized
{ after(grammarAccess.getSimpleExprAccess().getParenthesizedParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getSimpleExprAccess().getLiteralParserRuleCall_6()); }
	ruleLiteral
{ after(grammarAccess.getSimpleExprAccess().getLiteralParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
	ruleIntLiteral
{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getDoubleLiteralParserRuleCall_1()); }
	ruleDoubleLiteral
{ after(grammarAccess.getLiteralAccess().getDoubleLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_3()); }
	ruleCharLiteral
{ after(grammarAccess.getLiteralAccess().getCharLiteralParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_5()); }
(rule__Literal__Group_5__0)
{ after(grammarAccess.getLiteralAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bool__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getBoolAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getBoolAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getBoolAccess().getFalseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getReferenceTypeParserRuleCall_0()); }
	ruleReferenceType
{ after(grammarAccess.getTypeAccess().getReferenceTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_1()); }
	rulePrimitiveType
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypeParamRefParserRuleCall_2()); }
	ruleTypeParamRef
{ after(grammarAccess.getTypeAccess().getTypeParamRefParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getRoleTypeParserRuleCall_0()); }
	ruleRoleType
{ after(grammarAccess.getReferenceTypeAccess().getRoleTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getReferenceTypeAccess().getGroup_1()); }
(rule__ReferenceType__Group_1__0)
{ after(grammarAccess.getReferenceTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_0()); }
(rule__PrimitiveType__Group_0__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
(rule__PrimitiveType__Group_1__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
(rule__PrimitiveType__Group_2__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
(rule__PrimitiveType__Group_3__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_4()); }
(rule__PrimitiveType__Group_4__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassRefAccess().getSimpleClassRefParserRuleCall_0()); }
	ruleSimpleClassRef
{ after(grammarAccess.getClassRefAccess().getSimpleClassRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassRefAccess().getGenericClassRefParserRuleCall_1()); }
	ruleGenericClassRef
{ after(grammarAccess.getClassRefAccess().getGenericClassRefParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getGroup_0()); }
(rule__NewClassRef__Group_0__0)
{ after(grammarAccess.getNewClassRefAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNewClassRefAccess().getGroup_1()); }
(rule__NewClassRef__Group_1__0)
{ after(grammarAccess.getNewClassRefAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getNewClassRefAccess().getGenericClassRefParserRuleCall_2()); }
	ruleGenericClassRef
{ after(grammarAccess.getNewClassRefAccess().getGenericClassRefParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getGroup_0()); }
(rule__TheClassRef__Group_0__0)
{ after(grammarAccess.getTheClassRefAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTheClassRefAccess().getGroup_1()); }
(rule__TheClassRef__Group_1__0)
{ after(grammarAccess.getTheClassRefAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRefAccess().getGroup_0()); }
(rule__TaskRef__Group_0__0)
{ after(grammarAccess.getTaskRefAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTaskRefAccess().getTaskAssignment_1()); }
(rule__TaskRef__TaskAssignment_1)
{ after(grammarAccess.getTaskRefAccess().getTaskAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getUnaryMinusAction_0()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getUnaryMinusAction_0()); }
)

    |(
{ before(grammarAccess.getUnaryExprAccess().getGroup_1()); }
(rule__UnaryExpr__Group_1__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getUnaryExprAccess().getGroup_2()); }
(rule__UnaryExpr__Group_2__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getUnaryExprAccess().getGroup_3()); }
(rule__UnaryExpr__Group_3__0)
{ after(grammarAccess.getUnaryExprAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getAssignmentAction_0()); }
(

)
{ after(grammarAccess.getBinaryExprAccess().getAssignmentAction_0()); }
)

    |(
{ before(grammarAccess.getBinaryExprAccess().getGroup_1()); }
(rule__BinaryExpr__Group_1__0)
{ after(grammarAccess.getBinaryExprAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getBinaryExprAccess().getGroup_2()); }
(rule__BinaryExpr__Group_2__0)
{ after(grammarAccess.getBinaryExprAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getBinaryExprAccess().getGroup_3()); }
(rule__BinaryExpr__Group_3__0)
{ after(grammarAccess.getBinaryExprAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getBinaryExprAccess().getGroup_4()); }
(rule__BinaryExpr__Group_4__0)
{ after(grammarAccess.getBinaryExprAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Typed__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedAccess().getTypedBodyParserRuleCall_0()); }
	ruleTypedBody
{ after(grammarAccess.getTypedAccess().getTypedBodyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypedAccess().getFieldParserRuleCall_1()); }
	ruleField
{ after(grammarAccess.getTypedAccess().getFieldParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypedAccess().getVarAction_2()); }
(

)
{ after(grammarAccess.getTypedAccess().getVarAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedBodyAccess().getMethodParserRuleCall_0()); }
	ruleMethod
{ after(grammarAccess.getTypedBodyAccess().getMethodParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypedBodyAccess().getTaskParserRuleCall_1()); }
	ruleTask
{ after(grammarAccess.getTypedBodyAccess().getTaskParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VarKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarKindAccess().getVALEnumLiteralDeclaration_0()); }
(	'val' 
)
{ after(grammarAccess.getVarKindAccess().getVALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVarKindAccess().getVAREnumLiteralDeclaration_1()); }
(	'var' 
)
{ after(grammarAccess.getVarKindAccess().getVAREnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpEquality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpEqualityAccess().getEQUALSEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getOpEqualityAccess().getEQUALSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpEqualityAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getOpEqualityAccess().getNOT_EQUALSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpRelational__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpRelationalAccess().getSMALLEREnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getOpRelationalAccess().getSMALLEREnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpRelationalAccess().getGREATEREnumLiteralDeclaration_1()); }
(	'>' 
)
{ after(grammarAccess.getOpRelationalAccess().getGREATEREnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOpRelationalAccess().getSMALLER_EQUALSEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getOpRelationalAccess().getSMALLER_EQUALSEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getOpRelationalAccess().getGREATER_EQUALSEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getOpRelationalAccess().getGREATER_EQUALSEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpAdditive__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpAdditiveAccess().getPLUSEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getOpAdditiveAccess().getPLUSEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpAdditiveAccess().getMINUSEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getOpAdditiveAccess().getMINUSEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OpMultiplicative__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOpMultiplicativeAccess().getTIMESEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getOpMultiplicativeAccess().getTIMESEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getOpMultiplicativeAccess().getDIVIDED_BYEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getOpMultiplicativeAccess().getDIVIDED_BYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getOpMultiplicativeAccess().getMODULOEnumLiteralDeclaration_2()); }
(	'%' 
)
{ after(grammarAccess.getOpMultiplicativeAccess().getMODULOEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getREADWRITEEnumLiteralDeclaration_0()); }
(	'readwrite' 
)
{ after(grammarAccess.getRoleAccess().getREADWRITEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRoleAccess().getREADONLYEnumLiteralDeclaration_1()); }
(	'readonly' 
)
{ after(grammarAccess.getRoleAccess().getREADONLYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRoleAccess().getPUREEnumLiteralDeclaration_2()); }
(	'pure' 
)
{ after(grammarAccess.getRoleAccess().getPUREEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getGroup_0()); }
(rule__Program__Group_0__0)?
{ after(grammarAccess.getProgramAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getImportsAssignment_1()); }
(rule__Program__ImportsAssignment_1)*
{ after(grammarAccess.getProgramAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getProgramAccess().getElementsAssignment_2()); }
(rule__Program__ElementsAssignment_2)
{ after(grammarAccess.getProgramAccess().getElementsAssignment_2()); }
)
(
{ before(grammarAccess.getProgramAccess().getElementsAssignment_2()); }
(rule__Program__ElementsAssignment_2)*
{ after(grammarAccess.getProgramAccess().getElementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Program__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_0__0__Impl
	rule__Program__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getPackageKeyword_0_0()); }

	'package' 

{ after(grammarAccess.getProgramAccess().getPackageKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Program__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameAssignment_0_1()); }
(rule__Program__NameAssignment_0_1)
{ after(grammarAccess.getProgramAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildCard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__0__Impl
	rule__QualifiedNameWithWildCard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildCard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildCard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildCard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildCardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NormalClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group__0__Impl
	rule__NormalClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getMappedAssignment_0()); }
(rule__NormalClass__MappedAssignment_0)?
{ after(grammarAccess.getNormalClassAccess().getMappedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group__1__Impl
	rule__NormalClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getNormalClassAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group__2__Impl
	rule__NormalClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getNameAssignment_2()); }
(rule__NormalClass__NameAssignment_2)
{ after(grammarAccess.getNormalClassAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group__3__Impl
	rule__NormalClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getGroup_3()); }
(rule__NormalClass__Group_3__0)?
{ after(grammarAccess.getNormalClassAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group__4__Impl
	rule__NormalClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getGroup_4()); }
(rule__NormalClass__Group_4__0)?
{ after(grammarAccess.getNormalClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getGroup_5()); }
(rule__NormalClass__Group_5__0)?
{ after(grammarAccess.getNormalClassAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__NormalClass__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_3__0__Impl
	rule__NormalClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getNormalClassAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_3__1__Impl
	rule__NormalClass__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getTypeParamAssignment_3_1()); }
(rule__NormalClass__TypeParamAssignment_3_1)
{ after(grammarAccess.getNormalClassAccess().getTypeParamAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getRightSquareBracketKeyword_3_2()); }

	']' 

{ after(grammarAccess.getNormalClassAccess().getRightSquareBracketKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NormalClass__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_4__0__Impl
	rule__NormalClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getExtendsKeyword_4_0()); }

	'extends' 

{ after(grammarAccess.getNormalClassAccess().getExtendsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getSuperclassAssignment_4_1()); }
(rule__NormalClass__SuperclassAssignment_4_1)
{ after(grammarAccess.getNormalClassAccess().getSuperclassAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NormalClass__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_5__0__Impl
	rule__NormalClass__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getLeftCurlyBracketKeyword_5_0()); }

	'{' 

{ after(grammarAccess.getNormalClassAccess().getLeftCurlyBracketKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_5__1__Impl
	rule__NormalClass__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNormalClassAccess().getAlternatives_5_1()); }
(rule__NormalClass__Alternatives_5_1)
{ after(grammarAccess.getNormalClassAccess().getAlternatives_5_1()); }
)
(
{ before(grammarAccess.getNormalClassAccess().getAlternatives_5_1()); }
(rule__NormalClass__Alternatives_5_1)*
{ after(grammarAccess.getNormalClassAccess().getAlternatives_5_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NormalClass__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NormalClass__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getRightCurlyBracketKeyword_5_2()); }

	'}' 

{ after(grammarAccess.getNormalClassAccess().getRightCurlyBracketKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SingletonClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group__0__Impl
	rule__SingletonClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getMappedAssignment_0()); }
(rule__SingletonClass__MappedAssignment_0)?
{ after(grammarAccess.getSingletonClassAccess().getMappedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group__1__Impl
	rule__SingletonClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getObjectKeyword_1()); }

	'object' 

{ after(grammarAccess.getSingletonClassAccess().getObjectKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group__2__Impl
	rule__SingletonClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getNameAssignment_2()); }
(rule__SingletonClass__NameAssignment_2)
{ after(grammarAccess.getSingletonClassAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group__3__Impl
	rule__SingletonClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getGroup_3()); }
(rule__SingletonClass__Group_3__0)?
{ after(grammarAccess.getSingletonClassAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getGroup_4()); }
(rule__SingletonClass__Group_4__0)?
{ after(grammarAccess.getSingletonClassAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SingletonClass__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group_3__0__Impl
	rule__SingletonClass__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getExtendsKeyword_3_0()); }

	'extends' 

{ after(grammarAccess.getSingletonClassAccess().getExtendsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getSuperclassAssignment_3_1()); }
(rule__SingletonClass__SuperclassAssignment_3_1)
{ after(grammarAccess.getSingletonClassAccess().getSuperclassAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingletonClass__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group_4__0__Impl
	rule__SingletonClass__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getLeftCurlyBracketKeyword_4_0()); }

	'{' 

{ after(grammarAccess.getSingletonClassAccess().getLeftCurlyBracketKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group_4__1__Impl
	rule__SingletonClass__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSingletonClassAccess().getMembersAssignment_4_1()); }
(rule__SingletonClass__MembersAssignment_4_1)
{ after(grammarAccess.getSingletonClassAccess().getMembersAssignment_4_1()); }
)
(
{ before(grammarAccess.getSingletonClassAccess().getMembersAssignment_4_1()); }
(rule__SingletonClass__MembersAssignment_4_1)*
{ after(grammarAccess.getSingletonClassAccess().getMembersAssignment_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingletonClass__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingletonClass__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getRightCurlyBracketKeyword_4_2()); }

	'}' 

{ after(grammarAccess.getSingletonClassAccess().getRightCurlyBracketKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Task__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getTaskKeyword_0()); }

	'task' 

{ after(grammarAccess.getTaskAccess().getTaskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameAssignment_1()); }
(rule__Task__NameAssignment_1)
{ after(grammarAccess.getTaskAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_2()); }
(rule__Task__Group_2__0)?
{ after(grammarAccess.getTaskAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getTaskAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getTypeAssignment_4()); }
(rule__Task__TypeAssignment_4)
{ after(grammarAccess.getTaskAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getBodyAssignment_5()); }
(rule__Task__BodyAssignment_5)
{ after(grammarAccess.getTaskAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Task__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__0__Impl
	rule__Task__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__1__Impl
	rule__Task__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getParamsAssignment_2_1()); }
(rule__Task__ParamsAssignment_2_1)
{ after(grammarAccess.getTaskAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__2__Impl
	rule__Task__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_2_2()); }
(rule__Task__Group_2_2__0)*
{ after(grammarAccess.getTaskAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Task__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2_2__0__Impl
	rule__Task__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getTaskAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getParamsAssignment_2_2_1()); }
(rule__Task__ParamsAssignment_2_2_1)
{ after(grammarAccess.getTaskAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group__0__Impl
	rule__Constr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getConstrAction_0()); }
(

)
{ after(grammarAccess.getConstrAccess().getConstrAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group__1__Impl
	rule__Constr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getMappedAssignment_1()); }
(rule__Constr__MappedAssignment_1)?
{ after(grammarAccess.getConstrAccess().getMappedAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group__2__Impl
	rule__Constr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getNewKeyword_2()); }

	'new' 

{ after(grammarAccess.getConstrAccess().getNewKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group__3__Impl
	rule__Constr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getGroup_3()); }
(rule__Constr__Group_3__0)?
{ after(grammarAccess.getConstrAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getBodyAssignment_4()); }
(rule__Constr__BodyAssignment_4)?
{ after(grammarAccess.getConstrAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Constr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group_3__0__Impl
	rule__Constr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getConstrAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group_3__1__Impl
	rule__Constr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getParamsAssignment_3_1()); }
(rule__Constr__ParamsAssignment_3_1)
{ after(grammarAccess.getConstrAccess().getParamsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group_3__2__Impl
	rule__Constr__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getGroup_3_2()); }
(rule__Constr__Group_3_2__0)*
{ after(grammarAccess.getConstrAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getRightParenthesisKeyword_3_3()); }

	')' 

{ after(grammarAccess.getConstrAccess().getRightParenthesisKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Constr__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group_3_2__0__Impl
	rule__Constr__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getConstrAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constr__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constr__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getParamsAssignment_3_2_1()); }
(rule__Constr__ParamsAssignment_3_2_1)
{ after(grammarAccess.getConstrAccess().getParamsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getMappedAssignment_0()); }
(rule__Field__MappedAssignment_0)?
{ after(grammarAccess.getFieldAccess().getMappedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getKindAssignment_1()); }
(rule__Field__KindAssignment_1)
{ after(grammarAccess.getFieldAccess().getKindAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameAssignment_2()); }
(rule__Field__NameAssignment_2)
{ after(grammarAccess.getFieldAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getFieldAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
	rule__Field__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeAssignment_4()); }
(rule__Field__TypeAssignment_4)
{ after(grammarAccess.getFieldAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getGroup_5()); }
(rule__Field__Group_5__0)?
{ after(grammarAccess.getFieldAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Field__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_5__0__Impl
	rule__Field__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getEqualsSignKeyword_5_0()); }

	'=' 

{ after(grammarAccess.getFieldAccess().getEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getInitializerAssignment_5_1()); }
(rule__Field__InitializerAssignment_5_1)
{ after(grammarAccess.getFieldAccess().getInitializerAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMappedAssignment_0()); }
(rule__Method__MappedAssignment_0)?
{ after(grammarAccess.getMethodAccess().getMappedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getAlternatives_1()); }
(rule__Method__Alternatives_1)
{ after(grammarAccess.getMethodAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getThisRoleAssignment_2()); }
(rule__Method__ThisRoleAssignment_2)
{ after(grammarAccess.getMethodAccess().getThisRoleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_3()); }
(rule__Method__NameAssignment_3)
{ after(grammarAccess.getMethodAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_4()); }
(rule__Method__Group_4__0)?
{ after(grammarAccess.getMethodAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getMethodAccess().getColonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeAssignment_6()); }
(rule__Method__TypeAssignment_6)
{ after(grammarAccess.getMethodAccess().getTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyAssignment_7()); }
(rule__Method__BodyAssignment_7)?
{ after(grammarAccess.getMethodAccess().getBodyAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_4__0__Impl
	rule__Method__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4_0()); }

	'(' 

{ after(grammarAccess.getMethodAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_4__1__Impl
	rule__Method__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_4_1()); }
(rule__Method__ParamsAssignment_4_1)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_4__2__Impl
	rule__Method__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_4_2()); }
(rule__Method__Group_4_2__0)*
{ after(grammarAccess.getMethodAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4_3()); }

	')' 

{ after(grammarAccess.getMethodAccess().getRightParenthesisKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Method__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_4_2__0__Impl
	rule__Method__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getMethodAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsAssignment_4_2_1()); }
(rule__Method__ParamsAssignment_4_2_1)
{ after(grammarAccess.getMethodAccess().getParamsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Param__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__0__Impl
	rule__Param__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getKindAssignment_0()); }
(rule__Param__KindAssignment_0)
{ after(grammarAccess.getParamAccess().getKindAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__1__Impl
	rule__Param__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameAssignment_1()); }
(rule__Param__NameAssignment_1)
{ after(grammarAccess.getParamAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__2__Impl
	rule__Param__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getParamAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Param__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Param__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Param__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeAssignment_3()); }
(rule__Param__TypeAssignment_3)
{ after(grammarAccess.getParamAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStmtsAssignment_2()); }
(rule__Block__StmtsAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStmtsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalVarDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDecl__Group__0__Impl
	rule__LocalVarDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getVariableAssignment_0()); }
(rule__LocalVarDecl__VariableAssignment_0)
{ after(grammarAccess.getLocalVarDeclAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDecl__Group__1__Impl
	rule__LocalVarDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getGroup_1()); }
(rule__LocalVarDecl__Group_1__0)?
{ after(grammarAccess.getLocalVarDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getLocalVarDeclAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalVarDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDecl__Group_1__0__Impl
	rule__LocalVarDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getLocalVarDeclAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVarDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVarDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getInitializerAssignment_1_1()); }
(rule__LocalVarDecl__InitializerAssignment_1_1)
{ after(grammarAccess.getLocalVarDeclAccess().getInitializerAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVar__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__0__Impl
	rule__LocalVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getKindAssignment_0()); }
(rule__LocalVar__KindAssignment_0)
{ after(grammarAccess.getLocalVarAccess().getKindAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVar__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__1__Impl
	rule__LocalVar__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getNameAssignment_1()); }
(rule__LocalVar__NameAssignment_1)
{ after(grammarAccess.getLocalVarAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVar__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__2__Impl
	rule__LocalVar__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getLocalVarAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVar__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVar__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getTypeAssignment_3()); }
(rule__LocalVar__TypeAssignment_3)
{ after(grammarAccess.getLocalVarAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__0__Impl
	rule__IfStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStmtAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__1__Impl
	rule__IfStmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfStmtAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__2__Impl
	rule__IfStmt__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getConditionAssignment_2()); }
(rule__IfStmt__ConditionAssignment_2)
{ after(grammarAccess.getIfStmtAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__3__Impl
	rule__IfStmt__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIfStmtAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__4__Impl
	rule__IfStmt__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getThenPartAssignment_4()); }
(rule__IfStmt__ThenPartAssignment_4)
{ after(grammarAccess.getIfStmtAccess().getThenPartAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getGroup_5()); }
(rule__IfStmt__Group_5__0)?
{ after(grammarAccess.getIfStmtAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfStmt__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group_5__0__Impl
	rule__IfStmt__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfStmtAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStmt__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStmt__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getElsePartAssignment_5_1()); }
(rule__IfStmt__ElsePartAssignment_5_1)
{ after(grammarAccess.getIfStmtAccess().getElsePartAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WhileLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileLoopAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getConditionAssignment_2()); }
(rule__WhileLoop__ConditionAssignment_2)
{ after(grammarAccess.getWhileLoopAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileLoopAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileLoop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getBodyAssignment_4()); }
(rule__WhileLoop__BodyAssignment_4)
{ after(grammarAccess.getWhileLoopAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SuperConstrCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group__0__Impl
	rule__SuperConstrCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getSuperConstrCallAction_0()); }
(

)
{ after(grammarAccess.getSuperConstrCallAccess().getSuperConstrCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group__1__Impl
	rule__SuperConstrCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getSuperKeyword_1()); }

	'super' 

{ after(grammarAccess.getSuperConstrCallAccess().getSuperKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group__2__Impl
	rule__SuperConstrCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getGroup_2()); }
(rule__SuperConstrCall__Group_2__0)?
{ after(grammarAccess.getSuperConstrCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSuperConstrCallAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SuperConstrCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group_2__0__Impl
	rule__SuperConstrCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getSuperConstrCallAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group_2__1__Impl
	rule__SuperConstrCall__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getArgsAssignment_2_1()); }
(rule__SuperConstrCall__ArgsAssignment_2_1)
{ after(grammarAccess.getSuperConstrCallAccess().getArgsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group_2__2__Impl
	rule__SuperConstrCall__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getGroup_2_2()); }
(rule__SuperConstrCall__Group_2_2__0)*
{ after(grammarAccess.getSuperConstrCallAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getSuperConstrCallAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SuperConstrCall__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group_2_2__0__Impl
	rule__SuperConstrCall__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getSuperConstrCallAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperConstrCall__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperConstrCall__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getArgsAssignment_2_2_1()); }
(rule__SuperConstrCall__ArgsAssignment_2_2_1)
{ after(grammarAccess.getSuperConstrCallAccess().getArgsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnNothing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnNothing__Group__0__Impl
	rule__ReturnNothing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnNothing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnNothingAccess().getReturnNothingAction_0()); }
(

)
{ after(grammarAccess.getReturnNothingAccess().getReturnNothingAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnNothing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnNothing__Group__1__Impl
	rule__ReturnNothing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnNothing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnNothingAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnNothingAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnNothing__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnNothing__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnNothing__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnNothingAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnNothingAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpr__Group__0__Impl
	rule__ReturnExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExprAccess().getReturnKeyword_0()); }

	'return' 

{ after(grammarAccess.getReturnExprAccess().getReturnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpr__Group__1__Impl
	rule__ReturnExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExprAccess().getExprAssignment_1()); }
(rule__ReturnExpr__ExprAssignment_1)
{ after(grammarAccess.getReturnExprAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExprAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReturnExprAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExprStmt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprStmt__Group__0__Impl
	rule__ExprStmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprStmt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStmtAccess().getExprAssignment_0()); }
(rule__ExprStmt__ExprAssignment_0)
{ after(grammarAccess.getExprStmtAccess().getExprAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExprStmt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExprStmt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExprStmt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStmtAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExprStmtAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getOrExprParserRuleCall_0()); }
	ruleOrExpr
{ after(grammarAccess.getAssignmentAccess().getOrExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_1()); }
(rule__Assignment__Group_1__0)?
{ after(grammarAccess.getAssignmentAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__0__Impl
	rule__Assignment__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAssignmentAccess().getAssignmentLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__1__Impl
	rule__Assignment__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightAssignment_1_2()); }
(rule__Assignment__RightAssignment_1_2)
{ after(grammarAccess.getAssignmentAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__0__Impl
	rule__OrExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
	ruleAndExpr
{ after(grammarAccess.getOrExprAccess().getAndExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getGroup_1()); }
(rule__OrExpr__Group_1__0)?
{ after(grammarAccess.getOrExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__0__Impl
	rule__OrExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getLogicalExprLeftAction_1_0()); }
(

)
{ after(grammarAccess.getOrExprAccess().getLogicalExprLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__1__Impl
	rule__OrExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpAssignment_1_1()); }
(rule__OrExpr__OpAssignment_1_1)
{ after(grammarAccess.getOrExprAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
(rule__OrExpr__RightAssignment_1_2)
{ after(grammarAccess.getOrExprAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__0__Impl
	rule__AndExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getEqualityExprParserRuleCall_0()); }
	ruleEqualityExpr
{ after(grammarAccess.getAndExprAccess().getEqualityExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getGroup_1()); }
(rule__AndExpr__Group_1__0)?
{ after(grammarAccess.getAndExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__0__Impl
	rule__AndExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getLogicalExprLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAndExprAccess().getLogicalExprLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__1__Impl
	rule__AndExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpAssignment_1_1()); }
(rule__AndExpr__OpAssignment_1_1)
{ after(grammarAccess.getAndExprAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightAssignment_1_2()); }
(rule__AndExpr__RightAssignment_1_2)
{ after(grammarAccess.getAndExprAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EqualityExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group__0__Impl
	rule__EqualityExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRelationalExprParserRuleCall_0()); }
	ruleRelationalExpr
{ after(grammarAccess.getEqualityExprAccess().getRelationalExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getGroup_1()); }
(rule__EqualityExpr__Group_1__0)?
{ after(grammarAccess.getEqualityExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__0__Impl
	rule__EqualityExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0()); }
(

)
{ after(grammarAccess.getEqualityExprAccess().getEqualityExprLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__1__Impl
	rule__EqualityExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getOpAssignment_1_1()); }
(rule__EqualityExpr__OpAssignment_1_1)
{ after(grammarAccess.getEqualityExprAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRightAssignment_1_2()); }
(rule__EqualityExpr__RightAssignment_1_2)
{ after(grammarAccess.getEqualityExprAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__0__Impl
	rule__RelationalExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getAdditiveExprParserRuleCall_0()); }
	ruleAdditiveExpr
{ after(grammarAccess.getRelationalExprAccess().getAdditiveExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getGroup_1()); }
(rule__RelationalExpr__Group_1__0)?
{ after(grammarAccess.getRelationalExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__0__Impl
	rule__RelationalExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRelationalExprLeftAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExprAccess().getRelationalExprLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__1__Impl
	rule__RelationalExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpAssignment_1_1()); }
(rule__RelationalExpr__OpAssignment_1_1)
{ after(grammarAccess.getRelationalExprAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightAssignment_1_2()); }
(rule__RelationalExpr__RightAssignment_1_2)
{ after(grammarAccess.getRelationalExprAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group__0__Impl
	rule__AdditiveExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
	ruleMultiplicativeExpr
{ after(grammarAccess.getAdditiveExprAccess().getMultiplicativeExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
(rule__AdditiveExpr__Group_1__0)*
{ after(grammarAccess.getAdditiveExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__0__Impl
	rule__AdditiveExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getArithmeticBinaryExprLeftAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExprAccess().getArithmeticBinaryExprLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__1__Impl
	rule__AdditiveExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getOpAssignment_1_1()); }
(rule__AdditiveExpr__OpAssignment_1_1)
{ after(grammarAccess.getAdditiveExprAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_2()); }
(rule__AdditiveExpr__RightAssignment_1_2)
{ after(grammarAccess.getAdditiveExprAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultiplicativeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group__0__Impl
	rule__MultiplicativeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getCastParserRuleCall_0()); }
	ruleCast
{ after(grammarAccess.getMultiplicativeExprAccess().getCastParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
(rule__MultiplicativeExpr__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__0__Impl
	rule__MultiplicativeExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getArithmeticBinaryExprLeftAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExprAccess().getArithmeticBinaryExprLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__1__Impl
	rule__MultiplicativeExpr__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getOpAssignment_1_1()); }
(rule__MultiplicativeExpr__OpAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExprAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpr__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpr__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_2()); }
(rule__MultiplicativeExpr__RightAssignment_1_2)
{ after(grammarAccess.getMultiplicativeExprAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Cast__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__0__Impl
	rule__Cast__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getUnaryMinusParserRuleCall_0()); }
	ruleUnaryMinus
{ after(grammarAccess.getCastAccess().getUnaryMinusParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getGroup_1()); }
(rule__Cast__Group_1__0)*
{ after(grammarAccess.getCastAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Cast__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group_1__0__Impl
	rule__Cast__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getCastExprAction_1_0()); }
(

)
{ after(grammarAccess.getCastAccess().getCastExprAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group_1__1__Impl
	rule__Cast__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getAsKeyword_1_1()); }

	'as' 

{ after(grammarAccess.getCastAccess().getAsKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Cast__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Cast__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeAssignment_1_2()); }
(rule__Cast__TypeAssignment_1_2)
{ after(grammarAccess.getCastAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryMinus__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryMinus__Group_1__0__Impl
	rule__UnaryMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinus__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMinusAccess().getUnaryMinusAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryMinusAccess().getUnaryMinusAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryMinus__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryMinus__Group_1__1__Impl
	rule__UnaryMinus__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinus__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMinusAccess().getHyphenMinusKeyword_1_1()); }

	'-' 

{ after(grammarAccess.getUnaryMinusAccess().getHyphenMinusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryMinus__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryMinus__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinus__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMinusAccess().getExprAssignment_1_2()); }
(rule__UnaryMinus__ExprAssignment_1_2)
{ after(grammarAccess.getUnaryMinusAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryNot__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryNot__Group_1__0__Impl
	rule__UnaryNot__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryNot__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryNotAccess().getUnaryNotAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryNotAccess().getUnaryNotAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryNot__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryNot__Group_1__1__Impl
	rule__UnaryNot__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryNot__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryNotAccess().getExclamationMarkKeyword_1_1()); }

	'!' 

{ after(grammarAccess.getUnaryNotAccess().getExclamationMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryNot__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryNot__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryNot__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryNotAccess().getExprAssignment_1_2()); }
(rule__UnaryNot__ExprAssignment_1_2)
{ after(grammarAccess.getUnaryNotAccess().getExprAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MemberAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group__0__Impl
	rule__MemberAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getSimpleExprParserRuleCall_0()); }
	ruleSimpleExpr
{ after(grammarAccess.getMemberAccessAccess().getSimpleExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getGroup_1()); }
(rule__MemberAccess__Group_1__0)*
{ after(grammarAccess.getMemberAccessAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MemberAccess__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1__0__Impl
	rule__MemberAccess__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getMemberAccessTargetAction_1_0()); }
(

)
{ after(grammarAccess.getMemberAccessAccess().getMemberAccessTargetAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1__1__Impl
	rule__MemberAccess__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getFullStopKeyword_1_1()); }

	'.' 

{ after(grammarAccess.getMemberAccessAccess().getFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1__2__Impl
	rule__MemberAccess__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getMemberAssignment_1_2()); }
(rule__MemberAccess__MemberAssignment_1_2)
{ after(grammarAccess.getMemberAccessAccess().getMemberAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getGroup_1_3()); }
(rule__MemberAccess__Group_1_3__0)?
{ after(grammarAccess.getMemberAccessAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MemberAccess__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1_3__0__Impl
	rule__MemberAccess__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getLeftParenthesisKeyword_1_3_0()); }

	'(' 

{ after(grammarAccess.getMemberAccessAccess().getLeftParenthesisKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1_3__1__Impl
	rule__MemberAccess__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getArgsAssignment_1_3_1()); }
(rule__MemberAccess__ArgsAssignment_1_3_1)
{ after(grammarAccess.getMemberAccessAccess().getArgsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1_3__2__Impl
	rule__MemberAccess__Group_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getGroup_1_3_2()); }
(rule__MemberAccess__Group_1_3_2__0)*
{ after(grammarAccess.getMemberAccessAccess().getGroup_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getRightParenthesisKeyword_1_3_3()); }

	')' 

{ after(grammarAccess.getMemberAccessAccess().getRightParenthesisKeyword_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MemberAccess__Group_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1_3_2__0__Impl
	rule__MemberAccess__Group_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getCommaKeyword_1_3_2_0()); }

	',' 

{ after(grammarAccess.getMemberAccessAccess().getCommaKeyword_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MemberAccess__Group_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MemberAccess__Group_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__Group_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getArgsAssignment_1_3_2_1()); }
(rule__MemberAccess__ArgsAssignment_1_3_2_1)
{ after(grammarAccess.getMemberAccessAccess().getArgsAssignment_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpr__Group_0__0__Impl
	rule__SimpleExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExprAccess().getThisAction_0_0()); }
(

)
{ after(grammarAccess.getSimpleExprAccess().getThisAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleExprAccess().getThisKeyword_0_1()); }

	'this' 

{ after(grammarAccess.getSimpleExprAccess().getThisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__New__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__0__Impl
	rule__New__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getNewAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__1__Impl
	rule__New__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getClassRefAssignment_1()); }
(rule__New__ClassRefAssignment_1)
{ after(grammarAccess.getNewAccess().getClassRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getGroup_2()); }
(rule__New__Group_2__0)?
{ after(grammarAccess.getNewAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__New__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_2__0__Impl
	rule__New__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getNewAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_2__1__Impl
	rule__New__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsAssignment_2_1()); }
(rule__New__ArgsAssignment_2_1)
{ after(grammarAccess.getNewAccess().getArgsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_2__2__Impl
	rule__New__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getGroup_2_2()); }
(rule__New__Group_2_2__0)*
{ after(grammarAccess.getNewAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getNewAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__New__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_2_2__0__Impl
	rule__New__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getNewAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__New__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__New__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__New__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsAssignment_2_2_1()); }
(rule__New__ArgsAssignment_2_2_1)
{ after(grammarAccess.getNewAccess().getArgsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__The__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__The__Group__0__Impl
	rule__The__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__The__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheAccess().getTheKeyword_0()); }

	'the' 

{ after(grammarAccess.getTheAccess().getTheKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__The__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__The__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__The__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheAccess().getClassRefAssignment_1()); }
(rule__The__ClassRefAssignment_1)
{ after(grammarAccess.getTheAccess().getClassRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Start__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group__0__Impl
	rule__Start__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getStartKeyword_0()); }

	'start' 

{ after(grammarAccess.getStartAccess().getStartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group__1__Impl
	rule__Start__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getTaskRefAssignment_1()); }
(rule__Start__TaskRefAssignment_1)
{ after(grammarAccess.getStartAccess().getTaskRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getGroup_2()); }
(rule__Start__Group_2__0)?
{ after(grammarAccess.getStartAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Start__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group_2__0__Impl
	rule__Start__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getStartAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group_2__1__Impl
	rule__Start__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getArgsAssignment_2_1()); }
(rule__Start__ArgsAssignment_2_1)
{ after(grammarAccess.getStartAccess().getArgsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group_2__2__Impl
	rule__Start__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getGroup_2_2()); }
(rule__Start__Group_2_2__0)*
{ after(grammarAccess.getStartAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getStartAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Start__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group_2_2__0__Impl
	rule__Start__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getStartAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Start__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Start__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Start__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getArgsAssignment_2_2_1()); }
(rule__Start__ArgsAssignment_2_2_1)
{ after(grammarAccess.getStartAccess().getArgsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parenthesized__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthesized__Group__0__Impl
	rule__Parenthesized__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesized__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesized__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthesized__Group__1__Impl
	rule__Parenthesized__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesized__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedAccess().getExprAssignment_1()); }
(rule__Parenthesized__ExprAssignment_1)
{ after(grammarAccess.getParenthesizedAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesized__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parenthesized__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesized__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Literal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_5__0__Impl
	rule__Literal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNullLiteralAction_5_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getNullLiteralAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNullKeyword_5_1()); }

	'null' 

{ after(grammarAccess.getLiteralAccess().getNullKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReferenceType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceType__Group_1__0__Impl
	rule__ReferenceType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getNullAction_1_0()); }
(

)
{ after(grammarAccess.getReferenceTypeAccess().getNullAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReferenceType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReferenceType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReferenceType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceTypeAccess().getNULL_TYPETerminalRuleCall_1_1()); }
	RULE_NULL_TYPE
{ after(grammarAccess.getReferenceTypeAccess().getNULL_TYPETerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_0__0__Impl
	rule__PrimitiveType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getIntAction_0_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getIntAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getIntKeyword_0_1()); }

	'int' 

{ after(grammarAccess.getPrimitiveTypeAccess().getIntKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_1__0__Impl
	rule__PrimitiveType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getDoubleAction_1_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getDoubleAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getDoubleKeyword_1_1()); }

	'double' 

{ after(grammarAccess.getPrimitiveTypeAccess().getDoubleKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__0__Impl
	rule__PrimitiveType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getBooleanAction_2_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getBooleanAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_2_1()); }

	'boolean' 

{ after(grammarAccess.getPrimitiveTypeAccess().getBooleanKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_3__0__Impl
	rule__PrimitiveType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getCharAction_3_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getCharAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getCharKeyword_3_1()); }

	'char' 

{ after(grammarAccess.getPrimitiveTypeAccess().getCharKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_4__0__Impl
	rule__PrimitiveType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getVoidAction_4_0()); }
(

)
{ after(grammarAccess.getPrimitiveTypeAccess().getVoidAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getVoidKeyword_4_1()); }
(
	'void' 
)?
{ after(grammarAccess.getPrimitiveTypeAccess().getVoidKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RoleType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoleType__Group__0__Impl
	rule__RoleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleTypeAccess().getRoleAssignment_0()); }
(rule__RoleType__RoleAssignment_0)
{ after(grammarAccess.getRoleTypeAccess().getRoleAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RoleType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RoleType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RoleType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleTypeAccess().getBaseAssignment_1()); }
(rule__RoleType__BaseAssignment_1)
{ after(grammarAccess.getRoleTypeAccess().getBaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GenericClassRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericClassRef__Group__0__Impl
	rule__GenericClassRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericClassRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericClassRefAccess().getClazzAssignment_0()); }
(rule__GenericClassRef__ClazzAssignment_0)
{ after(grammarAccess.getGenericClassRefAccess().getClazzAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericClassRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericClassRef__Group__1__Impl
	rule__GenericClassRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericClassRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericClassRefAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getGenericClassRefAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericClassRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericClassRef__Group__2__Impl
	rule__GenericClassRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericClassRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericClassRefAccess().getTypeArgAssignment_2()); }
(rule__GenericClassRef__TypeArgAssignment_2)
{ after(grammarAccess.getGenericClassRefAccess().getTypeArgAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GenericClassRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GenericClassRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GenericClassRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericClassRefAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getGenericClassRefAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NewClassRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewClassRef__Group_0__0__Impl
	rule__NewClassRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getSimpleClassRefAction_0_0()); }
(

)
{ after(grammarAccess.getNewClassRefAccess().getSimpleClassRefAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewClassRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewClassRef__Group_0__1__Impl
	rule__NewClassRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getNewClassRefAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewClassRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewClassRef__Group_0__2__Impl
	rule__NewClassRef__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getClazzAssignment_0_2()); }
(rule__NewClassRef__ClazzAssignment_0_2)
{ after(grammarAccess.getNewClassRefAccess().getClazzAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewClassRef__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewClassRef__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getNewClassRefAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NewClassRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewClassRef__Group_1__0__Impl
	rule__NewClassRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getSimpleClassRefAction_1_0()); }
(

)
{ after(grammarAccess.getNewClassRefAccess().getSimpleClassRefAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewClassRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewClassRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getClazzAssignment_1_1()); }
(rule__NewClassRef__ClazzAssignment_1_1)
{ after(grammarAccess.getNewClassRefAccess().getClazzAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TheClassRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheClassRef__Group_0__0__Impl
	rule__TheClassRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getSimpleClassRefAction_0_0()); }
(

)
{ after(grammarAccess.getTheClassRefAccess().getSimpleClassRefAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheClassRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheClassRef__Group_0__1__Impl
	rule__TheClassRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getLeftParenthesisKeyword_0_1()); }

	'(' 

{ after(grammarAccess.getTheClassRefAccess().getLeftParenthesisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheClassRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheClassRef__Group_0__2__Impl
	rule__TheClassRef__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getClazzAssignment_0_2()); }
(rule__TheClassRef__ClazzAssignment_0_2)
{ after(grammarAccess.getTheClassRefAccess().getClazzAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheClassRef__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheClassRef__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getRightParenthesisKeyword_0_3()); }

	')' 

{ after(grammarAccess.getTheClassRefAccess().getRightParenthesisKeyword_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TheClassRef__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheClassRef__Group_1__0__Impl
	rule__TheClassRef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getSimpleClassRefAction_1_0()); }
(

)
{ after(grammarAccess.getTheClassRefAccess().getSimpleClassRefAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TheClassRef__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TheClassRef__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getClazzAssignment_1_1()); }
(rule__TheClassRef__ClazzAssignment_1_1)
{ after(grammarAccess.getTheClassRefAccess().getClazzAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskRef__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRef__Group_0__0__Impl
	rule__TaskRef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRef__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRefAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getTaskRefAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskRef__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRef__Group_0__1__Impl
	rule__TaskRef__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRef__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRefAccess().getTaskAssignment_0_1()); }
(rule__TaskRef__TaskAssignment_0_1)
{ after(grammarAccess.getTaskRefAccess().getTaskAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskRef__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRef__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRef__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRefAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getTaskRefAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_1__0__Impl
	rule__UnaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getUnaryNotAction_1_1()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getUnaryNotAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_2__0__Impl
	rule__UnaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_2_0()); }
	RULE_ID
{ after(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_2__1__Impl
	rule__UnaryExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getCastAction_2_2()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getCastAction_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_3__0__Impl
	rule__UnaryExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_3_0()); }
	RULE_ID
{ after(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_3__1__Impl
	rule__UnaryExpr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_3_1()); }
	RULE_ID
{ after(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_3__2__Impl
	rule__UnaryExpr__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_3_2()); }
	RULE_ID
{ after(grammarAccess.getUnaryExprAccess().getIDTerminalRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpr__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpr__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpr__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExprAccess().getParenthesizedAction_3_3()); }
(

)
{ after(grammarAccess.getUnaryExprAccess().getParenthesizedAction_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BinaryExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_1__0__Impl
	rule__BinaryExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getLogicalExprAction_1_1()); }
(

)
{ after(grammarAccess.getBinaryExprAccess().getLogicalExprAction_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BinaryExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_2__0__Impl
	rule__BinaryExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_2_0()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_2__1__Impl
	rule__BinaryExpr__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getEqualityExprAction_2_2()); }
(

)
{ after(grammarAccess.getBinaryExprAccess().getEqualityExprAction_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BinaryExpr__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_3__0__Impl
	rule__BinaryExpr__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_3_0()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_3__1__Impl
	rule__BinaryExpr__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_3_1()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_3__2__Impl
	rule__BinaryExpr__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_3_2()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getRelationalExprAction_3_3()); }
(

)
{ after(grammarAccess.getBinaryExprAccess().getRelationalExprAction_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BinaryExpr__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_4__0__Impl
	rule__BinaryExpr__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_0()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_4__1__Impl
	rule__BinaryExpr__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_1()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_4__2__Impl
	rule__BinaryExpr__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_2()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_4__3__Impl
	rule__BinaryExpr__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_3()); }
	RULE_ID
{ after(grammarAccess.getBinaryExprAccess().getIDTerminalRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpr__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BinaryExpr__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpr__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryExprAccess().getArithmeticBinaryExprAction_4_4()); }
(

)
{ after(grammarAccess.getBinaryExprAccess().getArithmeticBinaryExprAction_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__Program__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getProgramAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getElementsClassLikeParserRuleCall_2_0()); }
	ruleClassLike{ after(grammarAccess.getProgramAccess().getElementsClassLikeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
	ruleQualifiedNameWithWildCard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildCardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__MappedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getMappedMappedKeyword_0_0()); }
(
{ before(grammarAccess.getNormalClassAccess().getMappedMappedKeyword_0_0()); }

	'mapped' 

{ after(grammarAccess.getNormalClassAccess().getMappedMappedKeyword_0_0()); }
)

{ after(grammarAccess.getNormalClassAccess().getMappedMappedKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getNormalClassAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__TypeParamAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getTypeParamTypeParamParserRuleCall_3_1_0()); }
	ruleTypeParam{ after(grammarAccess.getNormalClassAccess().getTypeParamTypeParamParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__SuperclassAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getSuperclassNormalClassCrossReference_4_1_0()); }
(
{ before(grammarAccess.getNormalClassAccess().getSuperclassNormalClassQualifiedNameParserRuleCall_4_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getNormalClassAccess().getSuperclassNormalClassQualifiedNameParserRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getNormalClassAccess().getSuperclassNormalClassCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__ConstrsAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getConstrsConstrParserRuleCall_5_1_0_0()); }
	ruleConstr{ after(grammarAccess.getNormalClassAccess().getConstrsConstrParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NormalClass__MembersAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNormalClassAccess().getMembersMemberParserRuleCall_5_1_1_0()); }
	ruleMember{ after(grammarAccess.getNormalClassAccess().getMembersMemberParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__MappedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getMappedMappedKeyword_0_0()); }
(
{ before(grammarAccess.getSingletonClassAccess().getMappedMappedKeyword_0_0()); }

	'mapped' 

{ after(grammarAccess.getSingletonClassAccess().getMappedMappedKeyword_0_0()); }
)

{ after(grammarAccess.getSingletonClassAccess().getMappedMappedKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getSingletonClassAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__SuperclassAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getSuperclassNormalClassCrossReference_3_1_0()); }
(
{ before(grammarAccess.getSingletonClassAccess().getSuperclassNormalClassQualifiedNameParserRuleCall_3_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSingletonClassAccess().getSuperclassNormalClassQualifiedNameParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getSingletonClassAccess().getSuperclassNormalClassCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingletonClass__MembersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingletonClassAccess().getMembersMemberParserRuleCall_4_1_0()); }
	ruleMember{ after(grammarAccess.getSingletonClassAccess().getMembersMemberParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTaskAccess().getNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getParamsParamParserRuleCall_2_1_0()); }
	ruleParam{ after(grammarAccess.getTaskAccess().getParamsParamParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getParamsParamParserRuleCall_2_2_1_0()); }
	ruleParam{ after(grammarAccess.getTaskAccess().getParamsParamParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getTypeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getTaskAccess().getTypeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getBodyBlockParserRuleCall_5_0()); }
	ruleBlock{ after(grammarAccess.getTaskAccess().getBodyBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParam__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParamAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getTypeParamAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__MappedAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getMappedMappedKeyword_1_0()); }
(
{ before(grammarAccess.getConstrAccess().getMappedMappedKeyword_1_0()); }

	'mapped' 

{ after(grammarAccess.getConstrAccess().getMappedMappedKeyword_1_0()); }
)

{ after(grammarAccess.getConstrAccess().getMappedMappedKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__ParamsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getParamsParamParserRuleCall_3_1_0()); }
	ruleParam{ after(grammarAccess.getConstrAccess().getParamsParamParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__ParamsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getParamsParamParserRuleCall_3_2_1_0()); }
	ruleParam{ after(grammarAccess.getConstrAccess().getParamsParamParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constr__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstrAccess().getBodyBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getConstrAccess().getBodyBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__MappedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getMappedMappedKeyword_0_0()); }
(
{ before(grammarAccess.getFieldAccess().getMappedMappedKeyword_0_0()); }

	'mapped' 

{ after(grammarAccess.getFieldAccess().getMappedMappedKeyword_0_0()); }
)

{ after(grammarAccess.getFieldAccess().getMappedMappedKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__KindAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getKindVarKindEnumRuleCall_1_0()); }
	ruleVarKind{ after(grammarAccess.getFieldAccess().getKindVarKindEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_4_0()); }
	ruleType{ after(grammarAccess.getFieldAccess().getTypeTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__InitializerAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getInitializerExprParserRuleCall_5_1_0()); }
	ruleExpr{ after(grammarAccess.getFieldAccess().getInitializerExprParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__MappedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMappedMappedKeyword_0_0()); }
(
{ before(grammarAccess.getMethodAccess().getMappedMappedKeyword_0_0()); }

	'mapped' 

{ after(grammarAccess.getMethodAccess().getMappedMappedKeyword_0_0()); }
)

{ after(grammarAccess.getMethodAccess().getMappedMappedKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__OverridingAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getOverridingOverrideKeyword_1_0_0()); }
(
{ before(grammarAccess.getMethodAccess().getOverridingOverrideKeyword_1_0_0()); }

	'override' 

{ after(grammarAccess.getMethodAccess().getOverridingOverrideKeyword_1_0_0()); }
)

{ after(grammarAccess.getMethodAccess().getOverridingOverrideKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ThisRoleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getThisRoleRoleEnumRuleCall_2_0()); }
	ruleRole{ after(grammarAccess.getMethodAccess().getThisRoleRoleEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_4_1_0()); }
	ruleParam{ after(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ParamsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_4_2_1_0()); }
	ruleParam{ after(grammarAccess.getMethodAccess().getParamsParamParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__TypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getTypeTypeParserRuleCall_6_0()); }
	ruleType{ after(grammarAccess.getMethodAccess().getTypeTypeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__BodyAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getBodyBlockParserRuleCall_7_0()); }
	ruleBlock{ after(grammarAccess.getMethodAccess().getBodyBlockParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__KindAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getKindValEnumRuleCall_0_0()); }
	ruleVal{ after(grammarAccess.getParamAccess().getKindValEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getParamAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Param__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getParamAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StmtsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStmtsStmtParserRuleCall_2_0()); }
	ruleStmt{ after(grammarAccess.getBlockAccess().getStmtsStmtParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getVariableLocalVarParserRuleCall_0_0()); }
	ruleLocalVar{ after(grammarAccess.getLocalVarDeclAccess().getVariableLocalVarParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVarDecl__InitializerAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarDeclAccess().getInitializerExprParserRuleCall_1_1_0()); }
	ruleExpr{ after(grammarAccess.getLocalVarDeclAccess().getInitializerExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__KindAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getKindVarKindEnumRuleCall_0_0()); }
	ruleVarKind{ after(grammarAccess.getLocalVarAccess().getKindVarKindEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getLocalVarAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVar__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVarAccess().getTypeTypeParserRuleCall_3_0()); }
	ruleType{ after(grammarAccess.getLocalVarAccess().getTypeTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getIfStmtAccess().getConditionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ThenPartAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getThenPartStmtParserRuleCall_4_0()); }
	ruleStmt{ after(grammarAccess.getIfStmtAccess().getThenPartStmtParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStmt__ElsePartAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStmtAccess().getElsePartStmtParserRuleCall_5_1_0()); }
	ruleStmt{ after(grammarAccess.getIfStmtAccess().getElsePartStmtParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getConditionExprParserRuleCall_2_0()); }
	ruleExpr{ after(grammarAccess.getWhileLoopAccess().getConditionExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileLoopAccess().getBodyStmtParserRuleCall_4_0()); }
	ruleStmt{ after(grammarAccess.getWhileLoopAccess().getBodyStmtParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__ArgsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getArgsExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getSuperConstrCallAccess().getArgsExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperConstrCall__ArgsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperConstrCallAccess().getArgsExprParserRuleCall_2_2_1_0()); }
	ruleExpr{ after(grammarAccess.getSuperConstrCallAccess().getArgsExprParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnExpr__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnExprAccess().getExprExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getReturnExprAccess().getExprExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExprStmt__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExprStmtAccess().getExprExprParserRuleCall_0_0()); }
	ruleExpr{ after(grammarAccess.getExprStmtAccess().getExprExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightExprParserRuleCall_1_2_0()); }
	ruleExpr{ after(grammarAccess.getAssignmentAccess().getRightExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getOpOpOrEnumRuleCall_1_1_0()); }
	ruleOpOr{ after(grammarAccess.getOrExprAccess().getOpOpOrEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0()); }
	ruleAndExpr{ after(grammarAccess.getOrExprAccess().getRightAndExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getOpOpAndEnumRuleCall_1_1_0()); }
	ruleOpAnd{ after(grammarAccess.getAndExprAccess().getOpOpAndEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0()); }
	ruleEqualityExpr{ after(grammarAccess.getAndExprAccess().getRightEqualityExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getOpOpEqualityEnumRuleCall_1_1_0()); }
	ruleOpEquality{ after(grammarAccess.getEqualityExprAccess().getOpOpEqualityEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExprAccess().getRightRelationalExprParserRuleCall_1_2_0()); }
	ruleRelationalExpr{ after(grammarAccess.getEqualityExprAccess().getRightRelationalExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getOpOpRelationalEnumRuleCall_1_1_0()); }
	ruleOpRelational{ after(grammarAccess.getRelationalExprAccess().getOpOpRelationalEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExprAccess().getRightAdditiveExprParserRuleCall_1_2_0()); }
	ruleAdditiveExpr{ after(grammarAccess.getRelationalExprAccess().getRightAdditiveExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getOpOpAdditiveEnumRuleCall_1_1_0()); }
	ruleOpAdditive{ after(grammarAccess.getAdditiveExprAccess().getOpOpAdditiveEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpr{ after(grammarAccess.getAdditiveExprAccess().getRightMultiplicativeExprParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getOpOpMultiplicativeEnumRuleCall_1_1_0()); }
	ruleOpMultiplicative{ after(grammarAccess.getMultiplicativeExprAccess().getOpOpMultiplicativeEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpr__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExprAccess().getRightCastParserRuleCall_1_2_0()); }
	ruleCast{ after(grammarAccess.getMultiplicativeExprAccess().getRightCastParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Cast__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastAccess().getTypeTypeParserRuleCall_1_2_0()); }
	ruleType{ after(grammarAccess.getCastAccess().getTypeTypeParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryMinus__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryMinusAccess().getExprUnaryNotParserRuleCall_1_2_0()); }
	ruleUnaryNot{ after(grammarAccess.getUnaryMinusAccess().getExprUnaryNotParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryNot__ExprAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryNotAccess().getExprMemberAccessParserRuleCall_1_2_0()); }
	ruleMemberAccess{ after(grammarAccess.getUnaryNotAccess().getExprMemberAccessParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__MemberAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getMemberMemberCrossReference_1_2_0()); }
(
{ before(grammarAccess.getMemberAccessAccess().getMemberMemberIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMemberAccessAccess().getMemberMemberIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getMemberAccessAccess().getMemberMemberCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__ArgsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getArgsExprParserRuleCall_1_3_1_0()); }
	ruleExpr{ after(grammarAccess.getMemberAccessAccess().getArgsExprParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccess__ArgsAssignment_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessAccess().getArgsExprParserRuleCall_1_3_2_1_0()); }
	ruleExpr{ after(grammarAccess.getMemberAccessAccess().getArgsExprParserRuleCall_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarRef__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarRefAccess().getVariableVarCrossReference_0()); }
(
{ before(grammarAccess.getVarRefAccess().getVariableVarIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVarRefAccess().getVariableVarIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVarRefAccess().getVariableVarCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgsOnly__ArgsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgsOnlyAccess().getArgsExprParserRuleCall_0()); }
	ruleExpr{ after(grammarAccess.getArgsOnlyAccess().getArgsExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__ClassRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getClassRefNewClassRefParserRuleCall_1_0()); }
	ruleNewClassRef{ after(grammarAccess.getNewAccess().getClassRefNewClassRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__ArgsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getNewAccess().getArgsExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__New__ArgsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewAccess().getArgsExprParserRuleCall_2_2_1_0()); }
	ruleExpr{ after(grammarAccess.getNewAccess().getArgsExprParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__The__ClassRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheAccess().getClassRefTheClassRefParserRuleCall_1_0()); }
	ruleTheClassRef{ after(grammarAccess.getTheAccess().getClassRefTheClassRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Start__TaskRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getTaskRefTaskRefParserRuleCall_1_0()); }
	ruleTaskRef{ after(grammarAccess.getStartAccess().getTaskRefTaskRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Start__ArgsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getArgsExprParserRuleCall_2_1_0()); }
	ruleExpr{ after(grammarAccess.getStartAccess().getArgsExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Start__ArgsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartAccess().getArgsExprParserRuleCall_2_2_1_0()); }
	ruleExpr{ after(grammarAccess.getStartAccess().getArgsExprParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesized__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedAccess().getExprExprParserRuleCall_1_0()); }
	ruleExpr{ after(grammarAccess.getParenthesizedAccess().getExprExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntLiteralAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); }
	RULE_DOUBLE{ after(grammarAccess.getDoubleLiteralAccess().getValueDOUBLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBoolParserRuleCall_0()); }
	ruleBool{ after(grammarAccess.getBooleanLiteralAccess().getValueBoolParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CharLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharLiteralAccess().getValueCHARTerminalRuleCall_0()); }
	RULE_CHAR{ after(grammarAccess.getCharLiteralAccess().getValueCHARTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeParamRef__ParamAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeParamRefAccess().getParamTypeParamCrossReference_0()); }
(
{ before(grammarAccess.getTypeParamRefAccess().getParamTypeParamIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeParamRefAccess().getParamTypeParamIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getTypeParamRefAccess().getParamTypeParamCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoleType__RoleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleTypeAccess().getRoleRoleEnumRuleCall_0_0()); }
	ruleRole{ after(grammarAccess.getRoleTypeAccess().getRoleRoleEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RoleType__BaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleTypeAccess().getBaseClassRefParserRuleCall_1_0()); }
	ruleClassRef{ after(grammarAccess.getRoleTypeAccess().getBaseClassRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleClassRef__ClazzAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleClassRefAccess().getClazzClassCrossReference_0()); }
(
{ before(grammarAccess.getSimpleClassRefAccess().getClazzClassQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSimpleClassRefAccess().getClazzClassQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getSimpleClassRefAccess().getClazzClassCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericClassRef__ClazzAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericClassRefAccess().getClazzNormalClassCrossReference_0_0()); }
(
{ before(grammarAccess.getGenericClassRefAccess().getClazzNormalClassQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getGenericClassRefAccess().getClazzNormalClassQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getGenericClassRefAccess().getClazzNormalClassCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GenericClassRef__TypeArgAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGenericClassRefAccess().getTypeArgTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getGenericClassRefAccess().getTypeArgTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__ClazzAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getClazzNormalClassCrossReference_0_2_0()); }
(
{ before(grammarAccess.getNewClassRefAccess().getClazzNormalClassQualifiedNameParserRuleCall_0_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getNewClassRefAccess().getClazzNormalClassQualifiedNameParserRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getNewClassRefAccess().getClazzNormalClassCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewClassRef__ClazzAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewClassRefAccess().getClazzNormalClassCrossReference_1_1_0()); }
(
{ before(grammarAccess.getNewClassRefAccess().getClazzNormalClassIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getNewClassRefAccess().getClazzNormalClassIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getNewClassRefAccess().getClazzNormalClassCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__ClazzAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getClazzSingletonClassCrossReference_0_2_0()); }
(
{ before(grammarAccess.getTheClassRefAccess().getClazzSingletonClassQualifiedNameParserRuleCall_0_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTheClassRefAccess().getClazzSingletonClassQualifiedNameParserRuleCall_0_2_0_1()); }
)
{ after(grammarAccess.getTheClassRefAccess().getClazzSingletonClassCrossReference_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TheClassRef__ClazzAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTheClassRefAccess().getClazzSingletonClassCrossReference_1_1_0()); }
(
{ before(grammarAccess.getTheClassRefAccess().getClazzSingletonClassIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTheClassRefAccess().getClazzSingletonClassIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getTheClassRefAccess().getClazzSingletonClassCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRef__TaskAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRefAccess().getTaskTaskCrossReference_0_1_0()); }
(
{ before(grammarAccess.getTaskRefAccess().getTaskTaskQualifiedNameParserRuleCall_0_1_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTaskRefAccess().getTaskTaskQualifiedNameParserRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getTaskRefAccess().getTaskTaskCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRef__TaskAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRefAccess().getTaskTaskCrossReference_1_0()); }
(
{ before(grammarAccess.getTaskRefAccess().getTaskTaskIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTaskRefAccess().getTaskTaskIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTaskRefAccess().getTaskTaskCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_DOUBLE : RULE_INT '.' RULE_INT;

RULE_CHAR : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\''))) '\'';

RULE_NULL_TYPE : 'Null';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


