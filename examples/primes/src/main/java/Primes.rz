import rolez.io.FileInputStream
import rolez.io.PrintStream
import rolez.util.Scanner
import rolez.util.Random

object Primes {
    task pure main: {
        val n = 500000;
        val cores = 4;
        
        val scanner = new Scanner(new FileInputStream("numbers.txt"));
        val numbers = new Array[int](n);
        for(var i = 0; i < n; i++)
            numbers.set(i, scanner.nextInt);
        
        val tasks = new Array[pure Task[int]](cores);
        for(var i = 0; i < cores; i++)
            tasks.set(i, this start countPrimes(numbers, i*(n/cores), (i+1)*(n/cores)));
        
        var count = 0;
        for(var i = 0; i < cores; i++)
            count += tasks.get(i).get;
        
        the System.out.println(count);
    }
    
    task pure countPrimes(numbers: readonly Array[int], begin: int, end: int): int {
        var count = 0;
        for(var i = begin; i < end; i++)
            if(this.isPrime(numbers.get(i)))
                count++;
        the System.out.println("Task " + begin + "-" + end + ": " + count);
        return count;
    }
    
    def pure isPrime(i: int): boolean {
        for(var j = 2; j < the Math.sqrt(i as double); j++)
            if(i % j == 0)
                return false;
        return true;
    }
}